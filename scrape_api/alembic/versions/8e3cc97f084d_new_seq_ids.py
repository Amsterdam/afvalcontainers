"""new seq ids

Revision ID: 8e3cc97f084d
Revises: ca54373f9692
Create Date: 2019-02-06 16:03:57.491467

"""
import logging
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8e3cc97f084d'
down_revision = 'ca54373f9692'
branch_labels = None
depends_on = None

LOG = logging.getLogger(__name__)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # ### end Alembic commands ###
    connection = op.get_bind()

    affected_tables = [
        # 'enevo_filllevel',
        # 'enevo_filllevel_raw',
        'sidcon_container_status_raw',
        'sidcon_container_states',
    ]

    for table in affected_tables:

        max_id = f"select max(id) from {table}"

        data = connection.execute(max_id).fetchall()
        table_count = data[0][0]
        new_max = table_count + 1

        has_default = f"""
        SELECT column_name, column_default
        FROM information_schema.columns
        WHERE (table_schema, table_name) = ('public', '{table}')
        and column_name = 'id';
        """

        data = connection.execute(has_default).fetchall()
        LOG.error(data)

        if data[0][1] is not None:
            LOG.info("No fix needed")
            continue

        new_seq_name = f"{table}_sequence"

        new_sequence = f"""
        create sequence if not exists {new_seq_name}
        start {new_max};
        """

        new_owner = f"""
        alter sequence {new_seq_name} owner to kilogram;
        alter sequence {new_seq_name} owned by {table}.id;
        """

        LOG.info(new_sequence)
        LOG.info(new_owner)

        connection.execute(new_sequence)
        connection.execute(new_owner)

        alter_seq = f"""
        alter table {table} alter column id
        set default nextval('{new_seq_name}');
        """

        connection.execute(alter_seq)
        LOG.info(alter_seq)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # ### end Alembic commands ###
    pass
